name: AI Trending Shorts Pipeline v2

on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * *'  # Daily at 12:00 UTC

jobs:
  build_and_upload:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ffmpeg \
            libsm6 \
            libxext6 \
            imagemagick \
            fonts-dejavu-core \
            fonts-liberation \
            fonts-freefont-ttf \
            espeak-ng  # Required for Coqui TTS
          echo "üìù Available fonts:"
          fc-list | grep -i dejavu | head -3
          fc-list | grep -i liberation | head -3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install \
            google-generativeai \
            requests \
            beautifulsoup4 \
            moviepy \
            google-api-python-client \
            google-auth \
            Pillow \
            python-dotenv \
            tenacity \
            pytrends \
            gtts

      - name: Make tmp folder
        run: mkdir -p tmp

      - name: Fetch trending topics
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: python .github/scripts/fetch_trending.py

      - name: Generate trending topic & script
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: python .github/scripts/generate_trending_and_script.py

      - name: Install Coqui TTS
        run: |
          pip install TTS
          python -c "import TTS; print('‚úÖ Coqui TTS installed successfully')"

      - name: Generate TTS (Local Coqui)
        run: python .github/scripts/generate_tts.py

      - name: Create video
        run: python .github/scripts/create_video.py

      - name: Generate thumbnail
        run: python .github/scripts/generate_thumbnail.py

      - name: Upload to YouTube
        env:
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
        run: python .github/scripts/upload_youtube.py

      - name: Upload artifact (latest short)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: latest-short-${{ github.run_number }}
          path: |
            tmp/short.mp4
            tmp/thumbnail.png
            tmp/script.json
          retention-days: 30

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: error-logs-${{ github.run_number }}
          path: tmp/*.log
          retention-days: 7